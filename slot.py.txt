import pygame
import sys
import random
from time import time

# --- CONFIGURATION ---
SCREEN_WIDTH = 1024
SCREEN_HEIGHT = 600
FPS = 30
REEL_COUNT = 3
SYMBOL_HEIGHT = 128
SPIN_DURATION = 2  # seconds
REEL_GAP = 20
TOP_MARGIN = 0  # draw from top
TARGET_REEL_WIDTH = 328  # New scaled reel width to fill screen

# --- INIT ---
pygame.init()
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption("3-Reel Slot Machine")
clock = pygame.time.Clock()

# Load and scale the reel strip from assets
original_strip = pygame.image.load("assets/reel_strip.png").convert_alpha()
SYMBOL_COUNT = original_strip.get_height() // SYMBOL_HEIGHT

# Scale reel strip to wider reels (328px Ã— 768px)
reel_strip = pygame.transform.scale(
    original_strip,
    (TARGET_REEL_WIDTH, SYMBOL_COUNT * SYMBOL_HEIGHT)
)
SYMBOL_WIDTH = reel_strip.get_width()

# Reel state
offsets = [random.randint(0, SYMBOL_COUNT - 1) * SYMBOL_HEIGHT for _ in range(REEL_COUNT)]
spinning = [False] * REEL_COUNT
start_times = [0] * REEL_COUNT

# Positioning for centered layout
total_reel_width = REEL_COUNT * SYMBOL_WIDTH + (REEL_COUNT - 1) * REEL_GAP
start_x = (SCREEN_WIDTH - total_reel_width) // 2
reel_positions = [start_x + i * (SYMBOL_WIDTH + REEL_GAP) for i in range(REEL_COUNT)]

def draw_reels():
    screen.fill((0, 0, 0))

    for i in range(REEL_COUNT):
        reel_x = reel_positions[i]
        y_offset = offsets[i] % (SYMBOL_COUNT * SYMBOL_HEIGHT)

        symbols_to_draw = SCREEN_HEIGHT // SYMBOL_HEIGHT + 2
        first_symbol_index = int(y_offset // SYMBOL_HEIGHT)

        for j in range(symbols_to_draw):
            symbol_index = (first_symbol_index + j) % SYMBOL_COUNT
            symbol_rect = pygame.Rect(0, symbol_index * SYMBOL_HEIGHT, SYMBOL_WIDTH, SYMBOL_HEIGHT)
            draw_y = TOP_MARGIN + (j * SYMBOL_HEIGHT) - (y_offset % SYMBOL_HEIGHT)
            screen.blit(reel_strip, (reel_x, draw_y), symbol_rect)

    pygame.display.flip()

def start_spin():
    for i in range(REEL_COUNT):
        spinning[i] = True
        start_times[i] = time() + i * 0.3  # staggered start

def update_reels():
    current_time = time()
    for i in range(REEL_COUNT):
        if spinning[i]:
            if current_time - start_times[i] >= SPIN_DURATION:
                spinning[i] = False
                # Snap to symbol boundary
                offsets[i] = ((offsets[i] + SYMBOL_HEIGHT // 2) // SYMBOL_HEIGHT) % SYMBOL_COUNT * SYMBOL_HEIGHT
            else:
                offsets[i] += 30  # pixels per frame

# --- MAIN LOOP ---
running = True
while running:
    dt = clock.tick(FPS)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif event.type == pygame.KEYDOWN and event.key == pygame.K_SPACE:
            start_spin()

    update_reels()
    draw_reels()

pygame.quit()
sys.exit()
