import pygame
import sys
import random
from time import time

# --- CONFIGURATION ---
SCREEN_WIDTH = 1024
SCREEN_HEIGHT = 600
FPS = 30
REEL_COUNT = 3
VISIBLE_SYMBOLS = 3
REEL_GAP = 40
SPIN_DURATION = 2  # seconds each reel spins

# --- INIT ---
pygame.init()
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT), pygame.FULLSCREEN)
pygame.display.set_caption("Slot Machine")
clock = pygame.time.Clock()

# --- LOAD ASSETS ---
strip_img = pygame.image.load("assets/reel_strip.png").convert_alpha()

# --- Calculate dynamic symbol size ---
SYMBOL_HEIGHT = SCREEN_HEIGHT // VISIBLE_SYMBOLS  # 600 / 3 = 200
SYMBOL_COUNT = strip_img.get_height() // 128  # original symbol height
SYMBOL_WIDTH = strip_img.get_width()

# Calculate reel width scale factor
scale_factor = SYMBOL_HEIGHT / 128  # assuming original symbol height is 128
SCALED_SYMBOL_WIDTH = int(SYMBOL_WIDTH * scale_factor)

# --- Scale entire strip image ---
strip_img = pygame.transform.smoothscale(strip_img, (SCALED_SYMBOL_WIDTH, SYMBOL_COUNT * SYMBOL_HEIGHT))

# --- Prepare Reels ---
reels = []
for i in range(REEL_COUNT):
    offset = random.randint(0, SYMBOL_COUNT - 1) * SYMBOL_HEIGHT
    reels.append({
        "offset": offset,
        "spinning": True,
        "start_time": time(),
        "delay": i * 0.5,  # staggered stop
    })

# --- DRAW SYMBOLS ---
def draw_reel(reel_x, offset):
    for i in range(VISIBLE_SYMBOLS):  # 3 visible symbols
        src_y = (offset + i * SYMBOL_HEIGHT) % strip_img.get_height()
        if src_y + SYMBOL_HEIGHT <= strip_img.get_height():
            symbol = strip_img.subsurface((0, src_y, SCALED_SYMBOL_WIDTH, SYMBOL_HEIGHT))
        else:
            first_part = strip_img.subsurface((0, src_y, SCALED_SYMBOL_WIDTH, strip_img.get_height() - src_y))
            second_part = strip_img.subsurface((0, 0, SCALED_SYMBOL_WIDTH, SYMBOL_HEIGHT - (strip_img.get_height() - src_y)))

            symbol = pygame.Surface((SCALED_SYMBOL_WIDTH, SYMBOL_HEIGHT), pygame.SRCALPHA)
            symbol.blit(first_part, (0, 0))
            symbol.blit(second_part, (0, strip_img.get_height() - src_y))

        y_pos = (SCREEN_HEIGHT - VISIBLE_SYMBOLS * SYMBOL_HEIGHT) // 2 + i * SYMBOL_HEIGHT
        screen.blit(symbol, (reel_x, y_pos))

# --- MAIN LOOP ---
running = True
while running:
    screen.fill((0, 0, 0))  # black background

    for event in pygame.event.get():
        if event.type == pygame.QUIT or (
            event.type == pygame.KEYDOWN and event.key == pygame.K_ESCAPE):
            running = False

    now = time()

    for i, reel in enumerate(reels):
        if reel["spinning"]:
            elapsed = now - reel["start_time"]
            if elapsed > SPIN_DURATION + reel["delay"]:
                reel["spinning"] = False
                reel["offset"] = (int(reel["offset"] / SYMBOL_HEIGHT) % SYMBOL_COUNT) * SYMBOL_HEIGHT
            else:
                reel["offset"] = (reel["offset"] + 32) % strip_img.get_height()

        total_width = REEL_COUNT * SCALED_SYMBOL_WIDTH + (REEL_COUNT - 1) * REEL_GAP
        x = (SCREEN_WIDTH - total_width) // 2 + i * (SCALED_SYMBOL_WIDTH + REEL_GAP)
        draw_reel(x, reel["offset"])

    pygame.display.flip()
    clock.tick(FPS)

pygame.quit()
sys.exit()
